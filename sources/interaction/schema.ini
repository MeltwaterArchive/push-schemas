[INTERACTION]
ID = interaction.id
CREATED_AT = interaction.created_at (data_type: datetime, transform: datetime)
CREATED_AT_UNIX = interaction.created_at (data_type: integer, transform: unixtimestamp)
USERNAME = interaction.author.username 
IS_RETWEET = twitter.retweeted.id (data_type: integer, transform: exists)
TWITTER_LANG = twitter.lang
TWITTER_LANG =  twitter.retweet.lang
FIRST_TAG = interaction.tags (transform: first)


; declare an iterator variable :iter to fetch data using the list iterator, from the "links" root node
[LINKS :iter = list_iterator(links)]
ID = interaction.id
CREATED_AT = interaction.created_at (data_type: datetime, transform: datetime)
URL = :iter.url
TITLE = :iter.title
DOMAIN = :iter.url (transform: domain)
HOPS = :iter.hops (data_type: string-array) ;uncomment for postgres


; declare an iterator variable :iter to fetch data using the objectlist iterator, from the "salience.content.entities" root node
[SALIENCE_ENTITIES :iter = objectlist_iterator(salience.content.entities)]
ID = interaction.id
CREATED_AT = interaction.created_at (data_type: datetime, transform: datetime)
NAME = :iter.name
ENTITY_TYPE = :iter.type
SENTIMENT = :iter.sentiment
CONFIDENCE = :iter.confident


; declare an iterator variable :iter to fetch data using the objectlist iterator, from the "salience.content.topics" root node
[SALIENCE_TOPICS :iter = objectlist_iterator(salience.content.topics)]
ID = interaction.id
CREATED_AT = interaction.created_at (data_type: datetime, transform: datetime)
NAME = :iter.name
HITS = :iter.hits
SCORE = :iter.score


; the "." refers to the root of the interaction, making it possible to save the entire interaction as a JSON string in one field
[RAW]
ID = interaction.id
CREATED_AT = interaction.created_at (data_type: datetime, transform: datetime)
INTERACTION_TYPE = interaction.type
SUBSCRIPTION_ID = subscription.id
CSDL_HASH = subscription.hash
CSDL_HASH_TYPE = subscription.hash_type
DATA = . (data_type: string)


; _key and _val are reserved keywords, referring to the path to the leaf node (in dot-notation) and the value of the leaf node respectively
[INTERACTION_TAGS :iter = path_iterator(interaction.tag_tree)]
ID = interaction.id
CREATED_AT = interaction.created_at (data_type: datetime, transform: datetime)
TAG_NAME = :iter._key
TAG_VALUE_FLOAT = :iter._value (data_type: float, condition: is_float)
TAG_VALUE_ARRAY = :iter._value (data_type: string-array, condition: is_array)
