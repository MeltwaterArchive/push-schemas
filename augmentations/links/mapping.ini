; declare an iterator variable :iter to fetch data using the list iterator, from the "links" root node
[links :iter = parallel_iterator(links)]
interaction_id = interaction.id
interaction_type = interaction.type
created_at = interaction.created_at (data_type: datetime, transform: datetime)
url = :iter.url
title = :iter.title
domain = :iter.url (transform: domain)
normalized_url = :iter.normalized_url
hops = :iter.hops (data_type: string-array) ;uncomment for postgres

[links_meta :iter = parallel_iterator(links.meta)]
interaction_id = interaction.id
interaction_type = interaction.type
created_at = interaction.created_at (data_type: datetime, transform: datetime)
charset = :iter.charset
content_type = :iter.content_type
description = :iter.description
lang = :iter.lang
keywords = :iter.hops (data_type: string-array) ;uncomment for postgres

[links_meta_opengraph :iter = parallel_iterator(links.meta.opengraph)]
interaction_id = interaction.id
interaction_type = interaction.type
created_at = interaction.created_at (data_type: datetime, transform: datetime)
title = :iter.title
url = :iter.url
image = :iter.image
description = :iter.description
type = :iter.type
site_name = :iter.site_name

[links_meta_twitter :iter = parallel_iterator(links.meta.twitter)]
interaction_id = interaction.id
interaction_type = interaction.type
created_at = interaction.created_at (data_type: datetime, transform: datetime)
title = :iter.title
url = :iter.url
description = :iter.description
card = :iter.type
site = :iter.site
creator = :iter.creator
image = :iter.image
player = :iter.player
player_width = :iter.player_width
player_height = :iter.player_height
player_stream = :iter.player_stream
player_stream_content_type = :iter.player_stream_content_type
